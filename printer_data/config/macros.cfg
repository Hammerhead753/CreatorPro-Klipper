[gcode_macro START_PRINT]
description: Perform before printing
gcode:
  M117 Starting print

  ##### prepare variables: #####
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  {% set X_MIN = printer.toolhead.axis_minimum.x %}
  {% set X_MAX = printer.toolhead.axis_maximum.x %}
  {% set TO_X = 0 %}
  {% set TO_Y = printer.toolhead.axis_minimum.y + 10 %}
  
  M140 S{BED_TEMP}                              # start bed heating and continue
  
  G90                                           # use absolute positioning for the XYZ axes

  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28                                         # home the printer if necessary
  {% endif %}

  #{% if printer.toolhead.extruder == "extruder" %}
  #  {% set TO_X = X_MAX - printer.gcode_move.homing_origin.x %}
  #{% elif printer.toolhead.extruder == "extruder1" %}
  # {% set TO_X = X_MIN - printer.gcode_move.homing_origin.x %}
  #{% endif %}
  
  G1 X{TO_X} Y{TO_Y} Z2.0                       # move nozzle to corner so it doesnt ooze on the bed, while centering Y and moving the bed and extruder towards eachother already
  
  #{% if printer.heater_bed.temperature < BED_TEMP|float*0.85 %}
  #  M190 S{BED_TEMP|float*0.85}                 # wait till 0.85 of bed temp is reached, then continue
  #{% endif %}
  
  M140 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP}
  M190 S{BED_TEMP}
  
  PRIME_LINE                                    # prime line to start printing with a clean nozzle


[gcode_macro END_PRINT]
description: Perform when done printing
gcode:
  M117 Done printing :)

  ##### prepare variables: #####
  {% set X_MIN = printer.toolhead.axis_minimum.x %}
  {% set X_MAX = printer.toolhead.axis_maximum.x %}
  {% set Y_MIN = printer.toolhead.axis_minimum.y %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y %}
  {% set Z_MAX = printer.toolhead.axis_maximum.z %}
  {% set TO_X = 0 %}
  {% if printer.toolhead.position.z + 50 > Z_MAX %}
    {% set TO_Z = Z_MAX %}
  {% else %}
    {% set TO_Z = printer.toolhead.position.z + 50 %}
  {% endif %}

  
  M104 S0                                       # turn off extruder heater
  M140 S0                                       # turn off bed heater

  G90                                           # use absolute positioning for the XYZ axes
  {% if printer.toolhead.extruder == "extruder" %}
    {% set TO_X = X_MAX - printer.gcode_move.homing_origin.x %}
  {% elif printer.toolhead.extruder == "extruder1" %}
    {% set TO_X = X_MIN - printer.gcode_move.homing_origin.x %}
  {% endif %}
  G1 X{TO_X} Y{Y_MAX} Z{TO_Z}                   # move extruder away from bed and move nozzle to corner so it doesnt ooze on the bed

[gcode_macro PRIME_LINE]
description: Clean the nozzle (before printing)
gcode:
  ##### prepare variables: #####
  {% set FROM_X = 0 %}
  {% set TO_X = 0 %}
  {% set FROM_Y_TO_Y = printer.toolhead.axis_minimum.y + 10 %}

  G92 E0                                        # reset Extruder
  {% if printer.toolhead.extruder == "extruder" %}
    {% set FROM_X = printer.toolhead.axis_maximum.x - printer.gcode_move.homing_origin.x - 30 %}
    {% set TO_X = printer.toolhead.axis_maximum.x - printer.gcode_move.homing_origin.x - 80 %}
  {% elif printer.toolhead.extruder == "extruder1" %}
    {% set FROM_X = printer.toolhead.axis_minimum.x - printer.gcode_move.homing_origin.x + 30 %}
    {% set TO_X = printer.toolhead.axis_minimum.x - printer.gcode_move.homing_origin.x + 80 %}
  {% endif %}
  G1 X{FROM_X} Y{FROM_Y_TO_Y} Z0.1              # move to start position
  G1 E5                                         # start spitting goo
  G1 X{TO_X} Y{FROM_Y_TO_Y} Z0.1  E7            # draw line
  G92 E0                                        # reset extruder

[gcode_macro T0]
gcode:
    {% set height = printer.toolhead.position.z %}
    G0 Z{height + 10}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    G0 Z{height}

[gcode_macro T1]
gcode:
    {% set height = printer.toolhead.position.z %}
    G0 Z{height + 10}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    G0 Z{height}

[gcode_macro ACTIVATE_EXTRUDER]
rename_existing: _KLIPPER_ACTIVATE_EXTRUDER
variable_active_index: -1
gcode:
    {% set extruder = params.EXTRUDER|default("extruder")|lower|string %}

     Set offsets
     If your extruder nozzles aren't at the same height, set appropriate Z value for the required extruder 
    {% if extruder == "extruder" %}
      SET_GCODE_OFFSET X=-34 Y=0 Z=0 MOVE=0
    {% else %}
      SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=0
    {% endif %}
    SET_GCODE_VARIABLE MACRO=ACTIVATE_EXTRUDER VARIABLE=active_index VALUE={0 if extruder == "extruder" else 1}

    _KLIPPER_ACTIVATE_EXTRUDER EXTRUDER={extruder}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

  [gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause